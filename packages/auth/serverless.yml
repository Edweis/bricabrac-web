# inspired from https://www.codegigs.app/how-to-cognito-user-pool-using-serverless/
service: authentification
aliases:
  - &MainApiGateway
    Ref: ApiGatewayRestApi
plugins:
  - serverless-webpack
  - serverless-stack-output
provider:
  name: aws
  stage: ${opt:stage, 'stage'}
  region: ap-southeast-1
  runtime: nodejs12.x
  environment:
    USER_POOL_NAME: ${self:provider.stage}-auth-user-pool

custom:
  output:
    file: output.yaml

functions:
  preSignUp:
    handler: preSignUp.default
    events:
      - cognitoUserPool:
          pool: ${self:provider.environment.USER_POOL_NAME}
          trigger: PreSignUp
          existing: true
  me:
    handler: me.default
    events:
      - http:
          path: me
          method: GET
          cors: # FIXME disable once a domain is set
            origin: '*'
            headers:
              - Authorization
            allowCredentials: false
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: CognitoAuthorizer
          response: # FIXME disable once a domain is set
            headers:
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Headers: "'*'"
resources:
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:provider.environment.USER_POOL_NAME}
        UsernameAttributes: [email]
        AutoVerifiedAttributes: [email]
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: false
            RequireNumbers: false
            RequireSymbols: false
            RequireUppercase: false

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:provider.stage}-auth-user-pool-client
        UserPoolId: !Ref CognitoUserPool
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
        GenerateSecret: false
        RefreshTokenValidity: 30

    CognitoAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        AuthorizerResultTtlInSeconds: 10
        IdentitySource: method.request.header.Authorization
        Name: ${self:provider.stage}-cognito-authorizer
        RestApiId: *MainApiGateway
        Type: COGNITO_USER_POOLS
        ProviderARNs:
          - {"Fn::Join": ["", ["arn:aws:cognito-idp:", {Ref: "AWS::Region"}, ":", {Ref: "AWS::AccountId"}, ":userpool/", Ref: CognitoUserPool]]}

  Outputs:
    UserPoolId:
      Value: !Ref CognitoUserPool
    UserPoolClientId:
      Value: !Ref CognitoUserPoolClient
    MainApiGateway:
      Value: *MainApiGateway
      Export:
          Name: MainApiGateway
    CognitoAuthorizer:
      Value:
        Ref: CognitoAuthorizer
      Export:
          Name: CognitoAuthorizer
