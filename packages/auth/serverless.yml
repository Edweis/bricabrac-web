# inspired from https://www.codegigs.app/how-to-cognito-user-pool-using-serverless/
service: authentification
plugins:
  - serverless-webpack
  - serverless-stack-output
provider:
  name: aws
  stage: ${opt:stage, 'stage'}
  region: ap-southeast-1
  environment:
    USER_POOL_NAME: ${self:provider.stage}-auth-user-pool

custom:
  output:
    file: output.yaml

functions:
  preSignUp:
    handler: ./preSignUp.default
    events:
      - cognitoUserPool:
          pool: ${self:provider.environment.USER_POOL_NAME}
          trigger: PreSignUp
          existing: true

resources:
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:provider.environment.USER_POOL_NAME}
        UsernameAttributes: [email]
        AutoVerifiedAttributes: []
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: false
            RequireNumbers: false
            RequireSymbols: false
            RequireUppercase: false

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:provider.stage}-auth-user-pool-client
        UserPoolId: !Ref CognitoUserPool
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
        GenerateSecret: false
        RefreshTokenValidity: 30

  Outputs:
    UserPoolId:
      Value: !Ref CognitoUserPool
    UserPoolClientId:
      Value: !Ref CognitoUserPoolClient


  # IdentityPoolId:
  #   Value: !Ref CognitoIdentityPool
  #
  # CognitoAuthRole:
  #   Value: !Ref CognitoAuthRole
  #   Export:
  #     Name: YTTest-ExtCognitoAuthRole-${self:custom.stage}
